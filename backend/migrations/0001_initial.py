# Generated by Django 4.2.2 on 2024-01-03 01:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('files', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('app_id', models.CharField(editable=False, max_length=32, null=True)),
                ('name', models.CharField(max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('archived', 'Archived')], default='active', max_length=25)),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ImportFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('import_id', models.CharField(blank=True, max_length=32)),
                ('rows', models.IntegerField(default=0, null=True)),
                ('success_rows', models.IntegerField(default=0, null=True)),
                ('failed_rows', models.IntegerField(default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('import_type', models.CharField(max_length=25, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], default='pending', max_length=25)),
                ('app', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.app')),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('import_file', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='files.file')),
            ],
        ),
        migrations.CreateModel(
            name='ImportTemplate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('template', models.FileField(upload_to='uploads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('label', models.CharField(choices=[('tags-import-template', 'Tags Import Template')], max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='ImportFileLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('log_id', models.CharField(blank=True, max_length=32)),
                ('row_number', models.IntegerField()),
                ('message', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('row_status', models.CharField(choices=[('success', 'Success'), ('error', 'Error')], max_length=25)),
                ('import_file', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.importfile')),
            ],
        ),
        migrations.CreateModel(
            name='ExportFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('export_id', models.CharField(blank=True, max_length=32)),
                ('export_file', models.FileField(null=True, upload_to='exports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('export_type', models.CharField(max_length=25, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], default='pending', max_length=25)),
                ('app', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.app')),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AppAPIKey',
            fields=[
                ('id', models.CharField(editable=False, max_length=150, primary_key=True, serialize=False, unique=True)),
                ('prefix', models.CharField(editable=False, max_length=8, unique=True)),
                ('hashed_key', models.CharField(editable=False, max_length=150)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('name', models.CharField(default=None, help_text='A free-form name for the API key. Need not be unique. 50 characters max.', max_length=50)),
                ('revoked', models.BooleanField(blank=True, default=False, help_text='If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)')),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Once API key expires, clients cannot use it anymore.', null=True, verbose_name='Expires')),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_api_keys', to='backend.app')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'App API key',
                'verbose_name_plural': 'App API keys',
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_log_id', models.CharField(editable=False, max_length=32, null=True)),
                ('valid', models.BooleanField(default=True)),
                ('view_name', models.CharField(editable=False, max_length=128, null=True)),
                ('http_request_type', models.CharField(editable=False, max_length=16, null=True)),
                ('ip_address', models.CharField(editable=False, max_length=64, null=True)),
                ('path', models.CharField(editable=False, max_length=1000, null=True)),
                ('full_path', models.CharField(editable=False, max_length=1000, null=True)),
                ('data', models.JSONField(null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user_log_id'], name='user_log_index')],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.CharField(editable=False, max_length=32, null=True)),
                ('name', models.CharField(max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('archived', 'Archived')], default='active', max_length=25)),
                ('app', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.app')),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['customer_id'], name='customer_index')],
            },
        ),
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('app_user_id', models.CharField(blank=True, max_length=16)),
                ('email', models.CharField(max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('admin', 'Admin')], default='user', max_length=25)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('archived', 'Archived')], default='active', max_length=25)),
                ('app', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.app')),
                ('created_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='app_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['app_user_id'], name='app_user_index')],
            },
        ),
        migrations.AddIndex(
            model_name='app',
            index=models.Index(fields=['app_id'], name='app_index'),
        ),
    ]
